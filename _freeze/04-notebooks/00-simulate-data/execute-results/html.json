{
  "hash": "b51440901c40b659ae4dde2904996dc7",
  "result": {
    "markdown": "---\ntitle: \"Simulating data (with codebook)\"\nfreeze: auto\ndate: \"2024-05-07\"\n---\n\n\nAs part of the [**Babysteps for Reproducibility -tutorial**](../babysteps), in this notebook, simulated raw data is generated and saved in CSV format. Additionally, an example codebook is created, serving as a metadata document that outlines the dataset's contents, structure, and generation process. Simulating data before working with empirical data is a good practice because it allows for testing analytical methods, understanding potential outcomes, and ensuring that the data analysis workflow is robust and error-free. This preparatory step helps in planning and anticipating the needs and challenges of working with empirical data.\n\n**Action steps:**\n\n-   Run the first code chunk to create a sample codebook.\n\n-   Run the second code chunk to simulate and save the raw data.\n\n-   Proceed to the next step: Preparing data for analysis\n\n*Understanding all the details of the code below is not necessary for following the tutorial.*\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"View code: Load packages\"}\n# load / install tidyverse package for data manipulation\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {install.packages(\"tidyverse\")}\nrequire(tidyverse)\nrequire(here)\n```\n:::\n\n\n## Create an example codebook\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"View code: Create codebook\"}\n# Define and create a codebook\ncodebook <- \"\n# Codebook for Longitudinal Baby Steps Dataset\n\n## Dataset Overview\n\n**Title:** Longitudinal Study on Baby Steps and Developmental Progress\n\n**Description:** The dataset follows 100 baby participants across three observation points to monitor how their mobility type (Crawling, Toddling, Walking) affects their ability to solve puzzles and their engagement with the task, as indicated by their giggle counts. The data has three three observation points for each baby. The data is simulated for planning a (fictional) study.\n\n**Author:** Jane Doe\n\n**Creation Date:** March 11, 2024\n\n**Last Updated:** March 12, 2024\n\n**Version:** 1.0\n\n## Contact Information\n\n**Author Contact:** Jane Doe (email)\n\n**Institution:** University of Data Science\n\n## License\n\nThis dataset is made available under the [Creative Commons Attribution 4.0 International License (CC BY 4.0)](https://creativecommons.org/licenses/by/4.0/). Users are free to share and adapt the material for any purpose, even commercially, under the following terms: appropriate credit must be given, a link to the license provided, and indication if changes were made.\n\n## Citation\n\nPlease cite this dataset as:\n\nDoe, J. (2024). Longitudinal Study on Baby Steps and Developmental Progress. University of Data Science. Version 1.0. [DOI or URL]\n\n## Variables\n\n-   BabyID\n    -   Description: Unique identifier for each baby participant.\n    -   Type: Integer\n    -   Example Values: 1, 2, 3, ..., 100\n-   StepType\n    -   Description: The type of mobility the baby is primarily using at the time of observation.\n    -   Type: Categorical\n    -   Possible Values: Crawling, Toddling, Walking\n-   AgeMonths\n    -   Description: Age of the baby at the time of observation, in months.\n    -   Type: Integer\n    -   Range: 12-24 months\n-   ObservationPoint\n    -   Description: The stage of observation in the longitudinal study.\n    -   Type: Categorical\n    -   Possible Values: Start (12-14 months), Midway (15-20 months), End (21-24 months)\n-   PuzzleTime\n    -   Description: Time it takes for the baby to solve a simple puzzle, measured in seconds.\n    -   Type: Numeric\n    -   Example Values: Values can range based on puzzle difficulty and baby's skill level.\n-   GiggleCount\n    -   Description: Number of times the baby giggles while solving the puzzle. Used as a proxy for enjoyment or engagement.\n    -   Type: Integer\n    -   Example Values: Non-negative values, varying by individual and task.\n\n### Collection Method\n\nData were collected through direct observation of baby participants in a controlled environment, ensuring that puzzle difficulty was consistent across observations.\n\n## Use Cases\n\nThis dataset is intended for research on early childhood development, specifically examining the relationship between motor skills, problem-solving abilities, and engagement in activities.\n\n## Ethics Approval\n\nThis study received ethics approval from the Institutional Review Board at the University of Data Science, approval number #12345.\n\n## Acknowledgements\n\nWe thank the participants and their families for their time and contribution to this study. This research was supported by the Early Development Research Grant #67890.\n\"\n# Save the codebook content to a file\nwriteLines(codebook, here(\"01-data/metadata/codebook-babysteps.md\"))\nmessage(\"Codebook created and saved in folder: 01-data/metadata.\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCodebook created and saved in folder: 01-data/metadata.\n```\n:::\n:::\n\n\n## Simulate data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"View code: Simulate data\"}\n# Simulate data for the babysteps analysis example\n# Set seed for reproducibility\nset.seed(123) \n\n# Set parameters\nn_babies <- 100\nobservations_per_baby <- 3  # Each baby is observed in three waves\n\n# Create baby IDs and waves\nbaby_ids <- rep(1:n_babies, each = observations_per_baby)\nwave <- rep(c(\"T1\", \"T2\", \"T3\"), times = n_babies)\n\n# Assign step types randomly but consistently for each baby across observations (for simplicity)\nstep_type <- rep(sample(c(\"Crawling\", \"Toddling\", \"Walking\"), n_babies, replace = TRUE), each = observations_per_baby)\n\n# Simulate age in months, ensuring full variation from 12 to 24 months and logical progression\nage_months_start <- sample(12:22, n_babies, replace = TRUE)\nage_progression <- list(0:2, 0:2, 0:2)\nage_months <- rep(age_months_start, each = observations_per_baby) + rep(0:2, each = n_babies)\n# Adjust age_months to ensure it does not exceed 24 months\nage_months <- pmin(age_months, 24)\n\n# Simulate variable sleep_hours across waves\nsleep_hours_adjustment <- sample(-1:1, n_babies * observations_per_baby, replace = TRUE)\nsleep_hours <- rep(sample(8:16, n_babies, replace = TRUE), each = observations_per_baby) + sleep_hours_adjustment\n\n# Simulate puzzle_time with variability\nnoise <- rnorm(n = n_babies * observations_per_baby, mean = 0, sd = 5)\npuzzle_time <- round(120 - (age_months - 12) * 3 - ifelse(step_type == \"Walking\", 20, ifelse(step_type == \"Toddling\", 15, 10)) - (18 - sleep_hours) * 4 + noise)\n\n# Simulate giggle_count based on the simulated characteristics\ngiggle_count <- round(\n  ifelse(step_type == \"Walking\", 5, ifelse(step_type == \"Toddling\", 4, 3)) -\n  (age_months - min(age_months)) / (max(age_months) - min(age_months)) * 3 +\n  (sleep_hours - min(sleep_hours)) / (max(sleep_hours) - min(sleep_hours)) * 2\n)\n\n# Ensure giggle_count remains within a realistic range\ngiggle_count <- pmin(pmax(giggle_count, 3), 10)\n\n# Dataframe creation\ndata <- tibble(BabyID = baby_ids,\n                    StepType = step_type,\n                    AgeMonths = age_months,\n                    Wave = wave,\n                    SleepHours = sleep_hours,\n                    PuzzleTime = puzzle_time,\n                    GiggleCount = giggle_count)\n\n# Save the raw data into a csv file\nwrite.csv(data, here(\"01-data/raw/babysteps-rawdata.csv\"), row.names = FALSE)\nmessage(\"Raw data was created and saved in folder: 01-data/raw.\")\n```\n:::\n\n\n**To follow the full tutorial, next step is [Preparing data for analysis](01-prepare-data)**\n",
    "supporting": [
      "00-simulate-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}